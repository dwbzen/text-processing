/*
 * This build file for use with SonarQube source analysis and reports
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */
 plugins {
  id "org.sonarqube" version "2.7"
  id "java"
  id "ivy-publish"
}

apply plugin: 'java-library'
apply plugin: 'java-library-distribution'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'war'

sourceCompatibility = 12
targetCompatibility = 12
version = '2.0'
project.group = 'org.dwbzen.text-processing'
project.description = "Text Processing Framework"
project.tasks["sonarqube"].dependsOn "build"

jar {
    manifest {
        attributes 'Implementation-Title': 'text-processing',
                   'Implementation-Version': archiveVersion
    }
}

sonarqube {
    properties {
        property 'sonar.projectName', 'text-processing'
    }
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
	mavenLocal()
	flatDir {
        name "commonlibLib"
        dirs "../commonlib/lib"
    }
}

uploadArchives {
		repositories {
			add project.repositories.commonlibLib
			mavenLocal()
		}
}

dependencies {
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    implementation  'org.apache.logging.log4j:log4j-api:2.11.1'
    implementation  'org.apache.logging.log4j:log4j-core:2.11.1'
	implementation  'org.dwbzen.commonlib:commonlib:2.0'
    implementation  'com.fasterxml.jackson.core:jackson-core:2.9.5'
    implementation  'com.fasterxml.jackson.core:jackson-annotations:2.9.5'
    implementation  'com.fasterxml.jackson.core:jackson-databind:2.9.5'
    implementation  'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.5'
    implementation  'javax.ws.rs:javax.ws.rs-api:2.1'
}
